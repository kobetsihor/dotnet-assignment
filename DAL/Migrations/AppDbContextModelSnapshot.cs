// <auto-generated />
using System;
using DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.8");

            modelBuilder.Entity("DAL.Entities.Animal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerEmail")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("TEXT");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479"),
                            BirthDate = new DateTime(2022, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Dog",
                            OwnerEmail = "dogowner@example.com",
                            OwnerId = new Guid("02806643-41b8-4891-afaf-e73e145c717b"),
                            OwnerName = "Dog Owner"
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d477"),
                            BirthDate = new DateTime(2023, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Cat",
                            OwnerEmail = "catowner@example.com",
                            OwnerId = new Guid("193d0469-0245-4a28-985d-685cc879b0f5"),
                            OwnerName = "Cat Owner"
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d476"),
                            BirthDate = new DateTime(2024, 8, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Rabbit",
                            OwnerEmail = "rabbitsowner@example.com",
                            OwnerId = new Guid("becaab5e-3f90-4bb0-b623-8257ebed9e98"),
                            OwnerName = "Rabbit Owner"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Appointment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AnimalId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("VeterinarianId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Appointments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e0232c3d479"),
                            AnimalId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479"),
                            CustomerId = new Guid("02806643-41b8-4891-afaf-e73e145c717b"),
                            EndTime = new DateTime(2025, 8, 12, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Vet appointment",
                            StartTime = new DateTime(2025, 8, 12, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            VeterinarianId = new Guid("00000000-0000-0000-0000-000000000000")
                        },
                        new
                        {
                            Id = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d480"),
                            AnimalId = new Guid("f47ac10b-58cc-4372-a567-0e02b2c3d479"),
                            CustomerId = new Guid("02806643-41b8-4891-afaf-e73e145c717b"),
                            EndTime = new DateTime(2025, 8, 13, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Notes = "Follow-up check",
                            StartTime = new DateTime(2025, 8, 13, 16, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            VeterinarianId = new Guid("00000000-0000-0000-0000-000000000000")
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
